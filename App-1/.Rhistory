ggplot(dat=(subset(dat,!is.na(limitStrict))), aes(x=limitStrict)) +
geom_boxplot()
# Boxplot here
dat$limitStrict <- dat$V201393
library(ggplot2)
ggplot(dat=(subset(dat,!is.na(limitStrict))), aes(x=limitStrict)) +
geom_boxplot()
# Boxplot here
dat$limitStrict <- dat$V201393
# Boxplot here
dat$limitStrict <- dat$V201393
# Boxplot here
dat$limitStrict <- dat$V201393
# Boxplot here
dat$limitStrict <- dat$V201393
dat <- read.csv("anes_timeseries_2020_csv_20220210.csv")
ggplot(dat=(subset(dat,!is.na(limitStrict))), aes(x=limitStrict)) +
geom_boxplot()
# Boxplot here
dat$limitStrict <- dat$V201393
dat$limitStrict[dat$V201393 < 1] <- NA
dat$limitStrict[dat$V201393 == 1] <- 1
dat$limitStrict[dat$V201393 == 2] <- 2
dat$limitStrict[dat$V201393 == 3] <- 3
dat$limitStrict[dat$V201393 == 4] <- 4
dat$limitStrict[dat$V201393 == 5] <- 5
dat$limitStrict <- factor(dat$limitStrict,
labels = c("Far too strict", "somewhat too strict", "About right", "Not quite strict enough", "Not nearly strict enough"),
levels = c(1,2,3,4,5))
summary(dat$limitStrict)
ggplot(dat=(subset(dat,!is.na(limitStrict))), aes(x=limitStrict)) +
geom_boxplot()
knitr::opts_chunk$set(echo = TRUE)
#define UI
ui <- fluidPage(
titlePanel("titlePanel"),
## shiny generally follow javascript
sidebarLayout( position = "left",
sidebarPanel("sidebarPanel"),
mainPanel(
h1("First level title"),
h2("Second level title"),
h6("Sixth level title", align = "center"),
p("p creates a paragraph of text. Supply a style attribute
to change the format of the entire paragraph,", style = "font-family: 'times'; font-si16pt"),
strong("strong() makes bold text."),
em("em() creates italicized text."),
br(),
code("code displays your text similar to computer code"),
div("div creates segments of text with a similar style. This division of text is all blue because I passed the argument 'syle = color:blue' to div", style = "color:blue",
br(),
em("div can do this too")
),
p("span does the same thing as div, but it works with",
span("groups of words", style = "color:red"),
"that appear inside a paragraph"),
img(src = "bird1.jpg", height = 72, width = 72)
)
)
)
#define UI
ui <- fluidPage(
titlePanel("titlePanel"),
## shiny generally follow javascript
sidebarLayout( position = "left",
sidebarPanel("sidebarPanel"),
mainPanel(
h1("First level title"),
h2("Second level title"),
h6("Sixth level title", align = "center"),
p("p creates a paragraph of text. Supply a style attribute
to change the format of the entire paragraph,", style = "font-family: 'times'; font-si16pt"),
strong("strong() makes bold text."),
em("em() creates italicized text."),
br(),
code("code displays your text similar to computer code"),
div("div creates segments of text with a similar style. This division of text is all blue because I passed the argument 'syle = color:blue' to div", style = "color:blue",
br(),
em("div can do this too")
),
p("span does the same thing as div, but it works with",
span("groups of words", style = "color:red"),
"that appear inside a paragraph"),
img(src = "bird1.jpg", height = 72, width = 72)
)
)
#define server logic
server <- function(input, output) {
#define UI
ui <- fluidPage(
titlePanel("titlePanel"),
## shiny generally follow javascript
sidebarLayout( position = "left",
sidebarPanel("sidebarPanel"),
mainPanel(
h1("First level title"),
h2("Second level title"),
h6("Sixth level title", align = "center"),
p("p creates a paragraph of text. Supply a style attribute
to change the format of the entire paragraph,", style = "font-family: 'times'; font-si16pt"),
strong("strong() makes bold text."),
em("em() creates italicized text."),
br(),
code("code displays your text similar to computer code"),
div("div creates segments of text with a similar style. This division of text is all blue because I passed the argument 'syle = color:blue' to div", style = "color:blue",
br(),
em("div can do this too")
),
p("span does the same thing as div, but it works with",
span("groups of words", style = "color:red"),
"that appear inside a paragraph"),
img(src = "bird1.jpg", height = 72, width = 72)
)
)
)
#define UI
ui <- fluidPage(
titlePanel("titlePanel"),
## shiny generally follow javascript
sidebarLayout( position = "left",
sidebarPanel("sidebarPanel"),
mainPanel(
h1("First level title"),
h2("Second level title"),
h6("Sixth level title", align = "center"),
p("p creates a paragraph of text. Supply a style attribute
to change the format of the entire paragraph,", style = "font-family: 'times'; font-si16pt"),
strong("strong() makes bold text."),
em("em() creates italicized text."),
br(),
code("code displays your text similar to computer code"),
div("div creates segments of text with a similar style. This division of text is all blue because I passed the argument 'syle = color:blue' to div", style = "color:blue",
br(),
em("div can do this too")
),
p("span does the same thing as div, but it works with",
span("groups of words", style = "color:red"),
"that appear inside a paragraph"),
img(src = "bird1.jpg", height = 72, width = 72)
)
)
)
shiny::runApp('~/study_R/POL390/com.eyecile')
runApp('~/study_R/POL390/com.eyecile')
runApp('~/study_R/POL390/com.eyecile')
runApp()
ui <- fluidPage(
titlePanel("titlePanel"),
## shiny generally follow javascript
sidebarLayout( position = "left",
sidebarPanel("sidebarPanel"),
mainPanel(
h1("First level title"),
h2("Second level title"),
h6("Sixth level title", align = "center"),
p("p creates a paragraph of text. Supply a style attribute
to change the format of the entire paragraph,", style = "font-family: 'times'; font-si16pt"),
strong("strong() makes bold text."),
em("em() creates italicized text."),
br(),
code("code displays your text similar to computer code"),
div("div creates segments of text with a similar style. This division of text is all blue because I passed the argument 'syle = color:blue' to div", style = "color:blue",
br(),
em("div can do this too")
),
p("span does the same thing as div, but it works with",
span("groups of words", style = "color:red"),
"that appear inside a paragraph"),
img(src = "bird1.jpg", height = 72, width = 72)
)
)
)
runApp()
library(shiny)
runApp('app-1.R')
