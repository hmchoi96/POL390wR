id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m %>% addPolygons(
weight = 2,
opacity = 1,
color = "black",
dashArray = "5",
fillOpacity = 0.5,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "1",
fillOpacity = 1,
bringToFront = TRUE))
#legend? goes before interaction info when working
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
canada$prov_name_fr, 1
) %>% lapply(htmltools::HTML)
library(sf)
shapefiles_canada <- read.sf("C:/Users/joelp/OneDrive/Desktop/POL390/PS2/FED_CA_2_2_ENG.shp")
library(sf)
shapefiles_canada <- read.sf("C:/Users/joelp/OneDrive/Desktop/POL390/PS2/FED_CA_2_2_ENG.shp")
shapefiles_canada <- read.sf("C:/Users/joelp/OneDrive/Desktop/POL390/PS2/FED_CA_2_2_ENG.shp")
library(sf)
shapefiles_canada <- read.sf("C:/Users/joelp/OneDrive/Desktop/POL390/PS2/FED_CA_2_2_ENG.shp")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tmap)
library(leaflet)
library(sf)
library(stringr)
library(sp)
library(tidyverse)
library(dplyr)
#install.packages('rgdal')
canada_election_history <- read.csv("http://www.lop.parl.gc.ca/Content/LOP/OpenData/HFER_e.csv")
write.csv(canada_election_history, "canada_election_history.csv")
election_results_41st <- read.csv("2011_Canadian_Federal_Election_Results.csv")
election_results_42nd <- read.csv("2015_Canadian_Federal_Election_Results.csv")
election_results_43rd <- read.csv("2019_Canadian_Federal_Election_Results.csv")
election_results_44th <- read.csv("2021_Canadian_Federal_Election_Results.csv")
election_results_combined <- rbind(election_results_41st, election_results_42nd, election_results_43rd, election_results_44th)
write.csv(election_results_combined, "election_results_total.csv")
election_results_combined <- read.csv("election_results_total.csv")
# on hold for rn. total_data_set
total_data_set <- read.csv('Final_Data.csv')
library(leaflet)
library(geojsonio)
# https://data.opendatasoft.com/explore/dataset/georef-canada-province%40public/export/?disjunctive.prov_name_en
library(leaflet)
library(geojsonio)
library(rgdal)
canada <- geojsonio::geojson_read("georef-canada-province@public.geojson", what = "sp")
class(canada)
m <- leaflet(canada) %>%
setView(-80, 35.8, 2.1) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m %>% addPolygons(
weight = 2,
opacity = 1,
color = "darkgray",
dashArray = "5",
fillOpacity = 0.5,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "1",
fillOpacity = 1,
bringToFront = TRUE))
shapefiles_canada_2015 <- read_sf("FED_CA_2_2_ENG.shp")
View(total_data_set)
ggplot(total_data_set, aes(y=Votes.Obtained, x = Party))+
geom_bar(stat='identity')
total_data_set <- read.csv('Final_Data.csv')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Party))+
geom_bar(stat='identity')
View(total_data_set)
View(total_data_set)
View(total_data_set)
total_data_set <- read.csv('Final_Data.csv')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Party))+
geom_bar(stat='identity')
total_data_set <- read.csv('Final_Data.csv')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Party))+
geom_bar(stat='identity')
total_data_set <- read.csv('Final_Data.csv')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Party))+
geom_bar(stat='identity')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Party))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Party, fill = Province))+
geom_bar(stat='identity',position = 'dodge')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Party))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Party, fill = Province))+
geom_bar(stat='identity',position = 'fill')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'Dodge')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
total_data_set <- read.csv('Final_Data.csv')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
total_data_set <- read.csv('Final_Data.csv')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
total_data_set <- read.csv('Final_Data.csv')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill'
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tmap)
library(leaflet)
library(sf)
library(stringr)
library(sp)
library(tidyverse)
library(dplyr)
#install.packages('rgdal')
canada_election_history <- read.csv("http://www.lop.parl.gc.ca/Content/LOP/OpenData/HFER_e.csv")
write.csv(canada_election_history, "canada_election_history.csv")
election_results_41st <- read.csv("2011_Canadian_Federal_Election_Results.csv")
election_results_42nd <- read.csv("2015_Canadian_Federal_Election_Results.csv")
election_results_43rd <- read.csv("2019_Canadian_Federal_Election_Results.csv")
election_results_44th <- read.csv("2021_Canadian_Federal_Election_Results.csv")
election_results_combined <- rbind(election_results_41st, election_results_42nd, election_results_43rd, election_results_44th)
write.csv(election_results_combined, "election_results_total.csv")
election_results_combined <- read.csv("election_results_total.csv")
# on hold for rn. total_data_set
total_data_set <- read.csv('Final_Data.csv')
library(leaflet)
library(geojsonio)
# https://data.opendatasoft.com/explore/dataset/georef-canada-province%40public/export/?disjunctive.prov_name_en
library(leaflet)
library(geojsonio)
library(rgdal)
canada <- geojsonio::geojson_read("georef-canada-province@public.geojson", what = "sp")
class(canada)
m <- leaflet(canada) %>%
setView(-80, 35.8, 2.1) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m %>% addPolygons(
weight = 2,
opacity = 1,
color = "darkgray",
dashArray = "5",
fillOpacity = 0.5,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "1",
fillOpacity = 1,
bringToFront = TRUE))
shapefiles_canada_2015 <- read_sf("FED_CA_2_2_ENG.shp")
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
View(total_data_set)
View(total_data_set)
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity',position = 'fill')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province,group = Year))+
geom_bar(stat='identity',position = 'fill')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province,group = Year))+
geom_bar(stat='identity',position = 'fill')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province,group = Year))+
geom_bar(stat='identity',position = 'fill')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province,group = Year))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party, color = Party))+
geom_bar(stat='identity',position = 'dodge')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province, color = Party))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party, color = Party))+
geom_bar(stat='identity',position = 'dodge')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province, color = Party))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge')
ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
p <- ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
View(p)
View(p)
View(p)
p <- ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
p
library(gganimate)
install.packages(gganimate)
install.packages('gganimate')
transition_time(Year)
install.packages('gapminder')
install.packages('ggplotly')
p <- ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
plot(p)
p <- ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
q <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
plot(p)
library(gganimate)
anim <- p + transition_time(total_data_set$Year)
animate(anim)
p <- ggplot(total_data_set, aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity')
plot(p)
p <- ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
plot(p
plot(p)
p <- ggplot(total_data_set, aes(y=Votes.Obtained, x = Province))+
geom_bar(stat='identity')
q <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill')
plot(p)
ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity')
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge')
plot(p)
anim <- p + transition_time(total_data_set$Year)
animate(anim)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE)
plot(p)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill',show.legend = FALSE)
plot(p)
anim <- p + transition_time(total_data_set$Year)
animate(anim)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE)
plot(p)
anim <- p + transition_time(total_data_set$Year)
animate(anim)
anim <- p + ease_aes(total_data_set$Year)
animate(anim)
anim <- p + ease_aes()
animate(anim)
anim <- p + transition_time(total_data_set$Year)+ ease_aes()
animate(anim)
anim <- p + transition_time(total_data_set$Year) + ease_aes('back')
animate(anim)
anim <- p + transition_time(total_data_set$Year) + ease_aes('back-in-out')
animate(anim)
anim <- p + transition_time(total_data_set$Year) + ease_aes()
animate(anim,nframes=500)
anim <- p + transition_time(total_data_set$Year) + ease_aes()
animate(anim,duration=15)
anim <- p + transition_time(total_data_set$Year) + ease_aes()
animate(anim,duration=20)
animate(anim,duration=20,height = 800, width =800)
animate(anim,duration=20,height = 800, width =1000)
animate(anim,duration=20,height = 800, width =1500)
animate(anim,duration=40,height = 600, width =1500)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill',show.legend = FALSE) +
plot(p)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill',show.legend = FALSE)
plot(p)
anim <- p + transition_time(total_data_set$Year) + ease_aes()
animate(anim,duration=40,height = 600, width =1500)
animate(anim,duration=60,height = 600, width =1500)
anim <- p + transition_time(total_data_set$Year) + ease_aes()
animate(anim,fps=30,duration=60,height = 600, width =1500)
anim <- p + transition_time(total_data_set$Year) #+ ease_aes()
animate(anim,fps=30,duration=60,height = 600, width =1500)
anim <- p + transition_time(total_data_set$Year) + labs(title = 'Year: {frame_time}') #+ ease_aes()
animate(anim,fps=10,duration=60,height = 600, width =1500)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE)
plot(p)
anim <- p + transition_time(total_data_set$Year) + labs(title = 'Year: {frame_time}') + view_follow(fixed_y = FALSE)
animate(anim,fps=10,duration=120,height = 600, width =1500)
anim <- p + transition_time(total_data_set$Year) + labs(title = 'Year: {frame_time}') + view_follow(fixed_y = FALSE,fixed_x = TRUE)
animate(anim,fps=10,duration=120,height = 600, width =1500
anim <- p + transition_time(total_data_set$Year) + labs(title = 'Year: {frame_time}') + view_follow(fixed_y = FALSE,fixed_x = TRUE)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE)
plot(p)
anim <- p + transition_time(total_data_set$Year) + labs(title = 'Year: {frame_time}') + view_follow(fixed_y = FALSE,fixed_x = TRUE)
animate(anim,fps=10,duration=120,height = 600, width =1500)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE,width=0.2)
plot(p)
anim <- p + transition_time(total_data_set$Year) + labs(title = 'Year: {frame_time}') + view_follow(fixed_y = FALSE,fixed_x = TRUE)
animate(anim,fps=10,duration=120,height = 600, width =1500)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE,width=0.4)
plot(p)
anim <- p + transition_time(total_data_set$Year) + labs(title = 'Year: {frame_time}') + view_follow(fixed_y = FALSE,fixed_x = TRUE)
animate(anim,fps=10,duration=120,height = 600, width =1500)
library(gganimate)
library(grid)
library(gridExtra)
library(cowplot)
install.packages('cowplot')
library(gganimate)
library(grid)
library(gridExtra)
library(cowplot)
legend <- cowplot::get_legend(p)
grid.newpage()
grid.draw(legend)
legend <- get_legend(p)
# Create new plot window
grid.newpage()
# Draw Only legend
grid.draw(legend)
plot(legend)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE,width=0.6)
legend <- get_legend(p)
# Create new plot window
grid.newpage()
# Draw Only legend
grid.draw(legend)
grid.draw(legend)
q <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = TRUE,width=0.6)
legend <- get_legend(q)
grid.newpage()
grid.draw(legend)
q <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = TRUE,width=0.6)
legend <- get_legend(q)
grid.newpage()
grid.draw(legend)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = TRUE,width=0.6)
# Legend
q <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = TRUE,width=0.6)
legend <- get_legend(q)
grid.newpage()
grid.draw(legend)
# Animation
anim <- p + transition_time(total_data_set$Year) + labs(title = 'Year: {frame_time}') + view_follow(fixed_y = FALSE,fixed_x = TRUE)
animate(anim,fps=10,duration=10,height = 600, width =1500)
animate(anim,fps=10,duration=30,height = 600, width =1500)
animate(anim,fps=10,duration=120,height = 600, width =1500)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE,width=0.6)
anim <- p + transition_time(total_data_set$Year) + labs(title = 'Year: {frame_time}') + view_follow(fixed_y = FALSE,fixed_x = TRUE)
animate(anim,fps=10,duration=120,height = 600, width =1500)
show(q)
legend <- get_legend(q)
grid.newpage()
grid.draw(legend)
show(legend)
show(q)
total_data_set <- read.csv('Final_Data.csv')
library(gganimate)
library(grid)
library(gridExtra)
library(cowplot)
# Plot
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE,width=0.6)
# Legend
q <- p +
geom_bar(show.legend = TRUE)
show(q)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE,width=0.6)
q <- p + geom_bar(show.legend = TRUE)
show(q)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tmap)
library(leaflet)
library(sf)
library(stringr)
library(sp)
library(tidyverse)
library(dplyr)
#install.packages('rgdal')
canada_election_history <- read.csv("http://www.lop.parl.gc.ca/Content/LOP/OpenData/HFER_e.csv")
write.csv(canada_election_history, "canada_election_history.csv")
election_results_41st <- read.csv("2011_Canadian_Federal_Election_Results.csv")
election_results_42nd <- read.csv("2015_Canadian_Federal_Election_Results.csv")
election_results_43rd <- read.csv("2019_Canadian_Federal_Election_Results.csv")
election_results_44th <- read.csv("2021_Canadian_Federal_Election_Results.csv")
election_results_combined <- rbind(election_results_41st, election_results_42nd, election_results_43rd, election_results_44th)
write.csv(election_results_combined, "election_results_total.csv")
election_results_combined <- read.csv("election_results_total.csv")
# on hold for rn. total_data_set
total_data_set <- read.csv('Final_Data.csv')
library(leaflet)
library(geojsonio)
# https://data.opendatasoft.com/explore/dataset/georef-canada-province%40public/export/?disjunctive.prov_name_en
library(leaflet)
library(geojsonio)
library(rgdal)
canada <- geojsonio::geojson_read("georef-canada-province@public.geojson", what = "sp")
class(canada)
m <- leaflet(canada) %>%
setView(-80, 35.8, 2.1) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m %>% addPolygons(
weight = 2,
opacity = 1,
color = "darkgray",
dashArray = "5",
fillOpacity = 0.5,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "1",
fillOpacity = 1,
bringToFront = TRUE))
shapefiles_canada_2015 <- read_sf("FED_CA_2_2_ENG.shp")
library(gganimate)
library(grid)
library(gridExtra)
library(cowplot)
# Plot
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE,width=0.6)
# Legend
q <- p + geom_bar(show.legend = TRUE)
show(q)
q <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = TRUE,width=0.6)
show(q)
total_data_set <- read.csv('Final_Data.csv')
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE,width=0.6)
# Legend
q <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = TRUE,width=0.6)
show(q)
anim <- p + transition_time(total_data_set$Year) + labs(title = 'Year: {frame_time}') + view_follow(fixed_y = FALSE,fixed_x = TRUE)
animate(anim,fps=10,duration=120,height = 600, width =1500)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE,width=0.6)+ylab('Number of Votes')+ggtitle('Votes in Each Province from 1867 to 2021')
# Legend
q <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = TRUE,width=0.6)+ylab('Number of Votes')+ggtitle('Votes in Each Province from 1867 to 2021')
show(q)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill',show.legend = FALSE,width=0.6)+ylab('Number of Votes')+ggtitle('Votes in Each Province from 1867 to 2021')
# Legend
q <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'fill',show.legend = TRUE,width=0.6)+ylab('Number of Votes')+ggtitle('Votes in Each Province from 1867 to 2021')
show(q)
anim <- p + transition_time(total_data_set$Year) + labs(title = 'Year: {frame_time}') + view_follow(fixed_y = FALSE,fixed_x = TRUE)
animate(anim,fps=10,duration=220,height = 600, width =1500)
p <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = FALSE,width=0.6)+ylab('Number of Votes')+ggtitle('Votes in Each Province from 1867 to 2021')
# Legend
q <- ggplot(total_data_set,aes(y=Votes.Obtained, x = Province, fill = Party))+
geom_bar(stat='identity',position = 'dodge',show.legend = TRUE,width=0.6)+ylab('Number of Votes')+ggtitle('Votes in Each Province from 1867 to 2021')
show(q)
#legend <- get_legend(q)
#grid.newpage()
#grid.draw(legend)
# need to figure out how to have legend plot with graph
# Animation
anim <- p + transition_time(total_data_set$Year) + labs(title = 'Year: {frame_time}') + view_follow(fixed_y = FALSE,fixed_x = TRUE)
animate(anim,fps=10,duration=220,height = 600, width =1500)
