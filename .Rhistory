library(rmarkdown)
library(tidyverse)
library(tidyr)
install.packages("tidyverse")
install.packages(c("cli", "dplyr", "gtable", "httpuv", "markdown", "pillar", "tibble", "tzdb", "vctrs", "viridisLite"))
install.packages(c("boot", "class", "codetools", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "spatial", "survival"), lib="/opt/homebrew/Cellar/r/4.2.2_1/lib/R/library")
library(tidyverse)
numRoll <- 100000
throw <- sample(20, numRoll, replace=T)
expectation <- mean(throw)
print(expectation)
summary(throw)
print(expectation)
library(rmarkdown)
library(tidyverse)
numRoll <- 100000
throw <- sample(20, numRoll, replace=T)
expectation <- mean(throw)
summary(throw)
print(expectation)
install.packages("janitor") #optional, install janitor too for an alternative summarizing tool
library("janitor")
#Notice the difference in read csv functions
# Previously used: dat <- read.csv("anes_timeseries_2020/anes_timeseries_2020_csv_20220210.csv")
dat <- read.csv("anes_timeseries_2020_csv_20220210.csv") #If this doesn't work your tidyverse library didn't load
#load tidyverse, which contains dplyr package
library("tidyverse")
#Notice the difference in read csv functions
# Previously used: dat <- read.csv("anes_timeseries_2020/anes_timeseries_2020_csv_20220210.csv")
dat <- read.csv("anes_timeseries_2020_csv_20220210.csv") #If this doesn't work your tidyverse library didn't load
setwd("/Users/hyunmyungchoi/study_R/POL390")
#Notice the difference in read csv functions
# Previously used: dat <- read.csv("anes_timeseries_2020/anes_timeseries_2020_csv_20220210.csv")
dat <- read.csv("anes_timeseries_2020_csv_20220210.csv") #If this doesn't work your tidyverse library didn't load
# type answer here
numRoll <- 1000000
# type answer here
numRoll <- 1000000
throw <- sample(20, numRoll, replace=T)
expectation <- mean(throw)
summary(throw)
print(expectation)
numbers <- c(1:20)
numbers
percent <- 1/length(number)
percent <- 1/length(numbers)
percent
sum(numbers*percent)
# library(lubridate)
chooseCRANmirror()
13
# type answer here
3^2
# type answer here
expX2 <- sum((numbers^2) * percent)
expX2
expX <- sum(numbers*percent)
print(expX)
expx2 <- expX^2
varX <- expX2 - expx2
print(varX)
# type answer here
icosahedron <- c(1:20)
# type answer here
icosahedron <- c(1:20)
percent <- 1/length(numbers)
expX <- sum(numbers*percent)
print(expX)
# type answer here
expX2 <- sum((numbers^2) * percent)
expx2 <- expX^2
varX <- expX2 - expx2
print(varX)
# type answer here
expX2 <- sum((icosahedron^2) * percent)
expx2 <- expX^2
varX <- expX2 - expx2
print(varX)
ExCoin <- (1*headP) + (0*tailP)
# type answer here
headP <- 0.55
tailP <- 0.45
ExCoin <- (1*headP) + (0*tailP)
print(ExCoin)
print(ExCoin2)
# type answer here
ExCoin2 <- ((1^2) * headP) + ((0^2) * tailP)
print(ExCoin2)
print(VarCoin)
# type answer here
VarCoin <- headP(1-tailP)
# type answer here
VarCoin <- headP*(1-tailP)
print(VarCoin)
# type answer here
VarCoin <- headP*(1-headP)
print(VarCoin)
# type answer here
totalLess <- 3634
shelt <- 2605
unshelt <- 1029
respons <- 2158
responseRate <- respons / totalLess
print(responseRate)
# type answer here
#P(shelt | Man)
sheltMan <- 859
man <- 1570
ProbSheltMan <- sheltMan / man
print(ProbSheltMan)
# type answer here
#c-1)
survResShelMan <- sheltMan / respons
survResShelMan
# type answer here
#c-1)
survResShelMan <- sheltMan / respons
#c-2)
SheltWom <- 230
survResShelWom <-
# type answer here
VarCoin <- headP*(1-headP)
print(VarCoin)
round(VarCoin)
# type answer here
VarCoin <- headP*(1-headP)
print(VarCoin)
round(VarCoin, 2)
# type answer here
VarCoin <- headP*(1-headP)
print(round(VarCoin, 2))
# type answer here
totalLess <- 3634
shelt <- 2605
unshelt <- 1029
respons <- 2158
responseRate <- respons / totalLess
print(round(responseRate,2)
# type answer here
totalLess <- 3634
shelt <- 2605
unshelt <- 1029
respons <- 2158
responseRate <- respons / totalLess
print(round(responseRate,2))
# type answer here
VarCoin <- headP*(1-headP)
print(round(VarCoin, 3))
# type answer here
totalLess <- 3634
shelt <- 2605
unshelt <- 1029
respons <- 2158
responseRate <- respons / totalLess
print(round(responseRate,3))
# type answer here
#P(shelt | Man)
sheltMan <- 859
man <- 1570
ProbSheltMan <- sheltMan / man
print(round(ProbSheltMan,3))
# type answer here
#c-1)
survResShelMan <- sheltMan / respons
print(round(survResShelMan ,3))
#c-2)
SheltWom <- 230
survResShelWom <- SheltWom / respons
# type answer here
#c-1)
survResShelMan <- sheltMan / respons
print(round(survResShelMan ,3))
#c-2)
SheltWom <- 230
survResShelWom <- SheltWom / respons
print(round(print(round(survResShelMan ,3))
# type answer here
#c-1)
survResShelMan <- sheltMan / respons
print(round(survResShelMan ,3))
#c-2)
SheltWom <- 230
survResShelWom <- SheltWom / respons
print(round(print(round(survResShelMan ,3)
# type answer here
#c-1)
survResShelMan <- sheltMan / respons
print(round(survResShelMan ,3))
#c-2)
SheltWom <- 230
survResShelWom <- SheltWom / respons
print(round(print(survResShelMan ,3))
# type answer here
#c-1)
survResShelMan <- sheltMan / respons
print(round(survResShelMan ,3))
#c-2)
SheltWom <- 230
survResShelWom <- SheltWom / respons
print(round(print(survResShelMan ,3)))
# type answer here
#c-1)
survResShelMan <- sheltMan / respons
print(round(survResShelMan ,3))
#c-2)
SheltWom <- 230
survResShelWom <- SheltWom / respons
print(round(survResShelMan ,3))
print(round(survResShelMan ,3))
print(round(survResShelMan ,3))
#c-2)
SheltWom <- 230
print(round(survResShelMan ,3))
print(round(survResShelWom ,3))
# type answer here
#c-1)
survResShelMan <- sheltMan / respons
print(round(survResShelMan ,3))
#c-2)
SheltWom <- 230
survResShelWom <- SheltWom / respons
print(round(survResShelWom ,3))
#c-3)
859/2605
#c-3)
859/(859+316+20)
#c-3)
print(round(859/(859+316+20)),3)
#c-3)
print(round(859/(859+316+20)),3))
#c-3)
print(round(859/(859+316+20)),3)
#c-3)
print(round((859/(859+316+20)),3)
#c-3)
print(round((859/(859+316+20)),3))
#c-3)
print(round((859/(859+316+20)),3))
